type salesforce.SBQQ__LookupQuery__c {
  salesforce.Picklist SBQQ__LookupField__c {
    apiName = "SBQQ__LookupQuery__c.SBQQ__LookupField__c"
    deprecated = false
    description = "API Name of the custom field used in the query."
    inlineHelpText = "API Name of the custom field used in the query."
    label = "Lookup Field"
    trackTrending = false
    valueSet = {
      values = {
        SBQQ__Category__c = {
          fullName = "SBQQ__Category__c"
          default = false
          label = "SBQQ__Category__c"
        }
      }
      order = [
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__LookupField__c.valueSet.values.SBQQ__Category__c,
      ]
    }
    sorted = false
    restricted = false
    createable = true
    updateable = true
    queryable = true
  }
  salesforce.Picklist SBQQ__MatchType__c {
    apiName = "SBQQ__LookupQuery__c.SBQQ__MatchType__c"
    deprecated = false
    description = "If Match Type = Field Value, select a Tested Object and Tested Field. If Match Type = Static Value, enter the value into Tested Value. If Match Type = Configuration Attribute, specify a Configuration Attribute."
    inlineHelpText = "If Match Type = Field Value, select a Tested Object and Tested Field. If Match Type = Static Value, enter the value into Tested Value. If Match Type = Configuration Attribute, specify a Configuration Attribute."
    label = "Match Type"
    trackTrending = false
    valueSet = {
      values = {
        Field_Value@s = {
          fullName = "Field Value"
          default = false
          label = "Field Value"
        }
        Static_Value@s = {
          fullName = "Static Value"
          default = false
          label = "Static Value"
        }
        Configuration_Attribute_Value@s = {
          fullName = "Configuration Attribute Value"
          default = false
          label = "Configuration Attribute Value"
        }
      }
      order = [
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__MatchType__c.valueSet.values.Field_Value@s,
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__MatchType__c.valueSet.values.Static_Value@s,
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__MatchType__c.valueSet.values.Configuration_Attribute_Value@s,
      ]
    }
    sorted = false
    restricted = false
    createable = true
    updateable = true
    queryable = true
  }
  salesforce.Picklist SBQQ__Operator__c {
    apiName = "SBQQ__LookupQuery__c.SBQQ__Operator__c"
    deprecated = false
    description = "The operator that is applied when comparing the Field with the Value."
    inlineHelpText = "The operator that is applied when comparing the Field with the Value."
    label = "Operator"
    trackTrending = false
    valueSet = {
      values = {
        equals = {
          fullName = "equals"
          default = false
          label = "equals"
        }
        not_equals@s = {
          fullName = "not equals"
          default = false
          label = "not equals"
        }
        less_than@s = {
          fullName = "less than"
          default = false
          label = "less than"
        }
        less_or_equals@s = {
          fullName = "less or equals"
          default = false
          label = "less or equals"
        }
        greater_than@s = {
          fullName = "greater than"
          default = false
          label = "greater than"
        }
        greater_or_equals@s = {
          fullName = "greater or equals"
          default = false
          label = "greater or equals"
        }
      }
      order = [
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__Operator__c.valueSet.values.equals,
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__Operator__c.valueSet.values.not_equals@s,
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__Operator__c.valueSet.values.less_than@s,
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__Operator__c.valueSet.values.less_or_equals@s,
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__Operator__c.valueSet.values.greater_than@s,
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__Operator__c.valueSet.values.greater_or_equals@s,
      ]
    }
    sorted = false
    restricted = false
    createable = true
    updateable = true
    queryable = true
  }
  salesforce.FormulaCheckbox SBQQ__ParentRuleIsActive__c {
    apiName = "SBQQ__LookupQuery__c.SBQQ__ParentRuleIsActive__c"
    deprecated = false
    formula = "SBQQ__PriceRule2__r.SBQQ__Active__c || SBQQ__ProductRule__r.SBQQ__Active__c"
    formulaTreatBlanksAs = "BlankAsZero"
    label = "ParentRuleIsActive"
    trackTrending = false
    createable = false
    updateable = false
    queryable = true
    _hidden_value = true
    _generated_dependencies = [
      {
        reference = salesforce.SBQQ__LookupQuery__c.field.SBQQ__PriceRule2__c
      },
      {
        reference = salesforce.SBQQ__LookupQuery__c.field.SBQQ__ProductRule__c
      },
      {
        reference = salesforce.SBQQ__PriceRule__c
      },
      {
        reference = salesforce.SBQQ__PriceRule__c.field.SBQQ__Active__c
      },
      {
        reference = salesforce.SBQQ__ProductRule__c
      },
      {
        reference = salesforce.SBQQ__ProductRule__c.field.SBQQ__Active__c
      },
    ]
  }
  salesforce.Lookup SBQQ__PriceRule2__c {
    apiName = "SBQQ__LookupQuery__c.SBQQ__PriceRule2__c"
    deleteConstraint = "SetNull"
    deprecated = false
    description = "Price Rule associated with this Lookup Query. Replaces the legacy master-detail field."
    inlineHelpText = "Price Rule associated with this Lookup Query. Replaces the legacy master-detail field."
    label = "Price Rule"
    referenceTo = [
      salesforce.SBQQ__PriceRule__c,
    ]
    relationshipLabel = "Lookup Queries (Price Rule)"
    relationshipName = "PriceRuleLookupQueries"
    trackTrending = false
    createable = true
    updateable = true
    queryable = true
  }
  salesforce.Lookup SBQQ__ProductRule__c {
    apiName = "SBQQ__LookupQuery__c.SBQQ__ProductRule__c"
    deleteConstraint = "SetNull"
    deprecated = false
    description = "Product Rule associated with this Lookup Query"
    inlineHelpText = "Product Rule associated with this Lookup Query"
    label = "Product Rule"
    referenceTo = [
      salesforce.SBQQ__ProductRule__c,
    ]
    relationshipLabel = "Lookup Queries (Product Rule)"
    relationshipName = "ProductRuleLookupQueries"
    trackTrending = false
    createable = true
    updateable = true
    queryable = true
  }
  salesforce.FormulaText SBQQ__RuleLookupObject__c {
    apiName = "SBQQ__LookupQuery__c.SBQQ__RuleLookupObject__c"
    deprecated = false
    externalId = false
    formula = "TEXT(SBQQ__PriceRule2__r.SBQQ__LookupObject__c)"
    label = "Parent Rule Lookup Object"
    trackTrending = false
    unique = false
    caseSensitive = false
    createable = false
    updateable = false
    queryable = true
    _hidden_value = true
    _generated_dependencies = [
      {
        reference = salesforce.SBQQ__LookupQuery__c.field.SBQQ__PriceRule2__c
      },
      {
        reference = salesforce.SBQQ__PriceRule__c
      },
      {
        reference = salesforce.SBQQ__PriceRule__c.field.SBQQ__LookupObject__c
      },
    ]
  }
  salesforce.FormulaCheckbox SBQQ__RuleTargetsCalculator__c {
    apiName = "SBQQ__LookupQuery__c.SBQQ__RuleTargetsCalculator__c"
    deprecated = false
    formula = "ISPICKVAL(SBQQ__PriceRule2__r.SBQQ__TargetObject__c, 'Calculator') || ISPICKVAL(SBQQ__PriceRule2__r.SBQQ__TargetObject__c, 'Quote Line')"
    formulaTreatBlanksAs = "BlankAsZero"
    label = "RuleTargetsCalculator"
    trackTrending = false
    createable = false
    updateable = false
    queryable = true
    _hidden_value = true
    _generated_dependencies = [
      {
        reference = salesforce.SBQQ__LookupQuery__c.field.SBQQ__PriceRule2__c
      },
      {
        reference = salesforce.SBQQ__PriceRule__c
      },
      {
        reference = salesforce.SBQQ__PriceRule__c.field.SBQQ__TargetObject__c
      },
    ]
  }
  salesforce.Lookup SBQQ__TestedConfigurationAttribute__c {
    apiName = "SBQQ__LookupQuery__c.SBQQ__TestedConfigurationAttribute__c"
    deleteConstraint = "Restrict"
    deprecated = false
    description = "Configuration Attribute that is evaluated by this query. Required if Match Type = Configuration Attribute and only if this Query is associated with a Product Rule."
    inlineHelpText = "Configuration Attribute that is evaluated by this query. Required if Match Type = Configuration Attribute and only if this Query is associated with a Product Rule."
    label = "Tested Configuration Attribute"
    referenceTo = [
      salesforce.SBQQ__ConfigurationAttribute__c,
    ]
    relationshipLabel = "Lookup Queries"
    relationshipName = "LookupQueries"
    trackTrending = false
    createable = true
    updateable = true
    queryable = true
  }
  salesforce.Picklist SBQQ__TestedField__c {
    apiName = "SBQQ__LookupQuery__c.SBQQ__TestedField__c"
    deprecated = false
    description = "Field on Quote, Quote Line or Product Option object that is evaluated by this query. Required if Match Type = Field Value."
    inlineHelpText = "Field on Quote, Quote Line or Product Option object that is evaluated by this query. Required if Match Type = Field Value."
    label = "Tested Field"
    trackTrending = false
    valueSet = {
      values = {
        Product_Code@s = {
          fullName = "Product Code"
          default = false
          label = "Product Code"
        }
      }
      order = [
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__TestedField__c.valueSet.values.Product_Code@s,
      ]
    }
    sorted = false
    restricted = false
    createable = true
    updateable = true
    queryable = true
  }
  salesforce.Picklist SBQQ__TestedObject__c {
    apiName = "SBQQ__LookupQuery__c.SBQQ__TestedObject__c"
    deprecated = false
    description = "Object against which the query is evaluated. Required if Match Type = Field Value."
    inlineHelpText = "Object against which the query is evaluated. Required if Match Type = Field Value."
    label = "Tested Object"
    trackTrending = false
    valueSet = {
      values = {
        SBQQ__Quote__c = {
          fullName = salesforce.SBQQ__Quote__c
          default = false
          label = "Quote"
        }
        SBQQ__QuoteLine__c = {
          fullName = salesforce.SBQQ__QuoteLine__c
          default = false
          label = "Quote Line"
        }
        SBQQ__ProductOption__c = {
          fullName = salesforce.SBQQ__ProductOption__c
          default = false
          label = "Product Option"
        }
      }
      order = [
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__TestedObject__c.valueSet.values.SBQQ__Quote__c,
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__TestedObject__c.valueSet.values.SBQQ__QuoteLine__c,
        salesforce.SBQQ__LookupQuery__c.field.SBQQ__TestedObject__c.valueSet.values.SBQQ__ProductOption__c,
      ]
    }
    sorted = false
    restricted = false
    createable = true
    updateable = true
    queryable = true
  }
  salesforce.Text SBQQ__TestedValue__c {
    apiName = "SBQQ__LookupQuery__c.SBQQ__TestedValue__c"
    deprecated = false
    description = "The value you want to match in the field you selected using the operator chosen. Required if Match Type = Static Value."
    externalId = false
    inlineHelpText = "The value you want to match in the field you selected using the operator chosen. Required if Match Type = Static Value."
    label = "Tested Value"
    length = 255
    trackTrending = false
    unique = false
    caseSensitive = false
    createable = true
    updateable = true
    queryable = true
  }
}
