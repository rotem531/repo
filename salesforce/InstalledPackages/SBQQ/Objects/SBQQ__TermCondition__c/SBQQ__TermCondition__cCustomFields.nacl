type salesforce.SBQQ__TermCondition__c {
  salesforce.Number SBQQ__Index__c {
    apiName = "SBQQ__TermCondition__c.SBQQ__Index__c"
    deprecated = false
    description = "Assign an unique number to this Condition to reference it in the Quote Term's Advanced Condition."
    externalId = false
    inlineHelpText = "Assign an unique number to this Condition to reference it in the Quote Term's Advanced Condition."
    label = "Index"
    precision = 6
    scale = 0
    trackTrending = false
    unique = false
    createable = true
    updateable = true
    queryable = true
  }
  salesforce.Picklist SBQQ__Operator__c {
    apiName = "SBQQ__TermCondition__c.SBQQ__Operator__c"
    deprecated = false
    description = "The operator for this field."
    inlineHelpText = "Choose the operator for the field."
    label = "Operator"
    trackTrending = false
    valueSet = {
      values = {
        equals = {
          fullName = "equals"
          default = false
          label = "equals"
        }
        not_equals@s = {
          fullName = "not equals"
          default = false
          label = "not equals"
        }
        less_than@s = {
          fullName = "less than"
          default = false
          label = "less than"
        }
        less_or_equals@s = {
          fullName = "less or equals"
          default = false
          label = "less or equals"
        }
        greater_than@s = {
          fullName = "greater than"
          default = false
          label = "greater than"
        }
        greater_or_equals@s = {
          fullName = "greater or equals"
          default = false
          label = "greater or equals"
        }
        starts_with@s = {
          fullName = "starts with"
          default = false
          label = "starts with"
        }
        ends_with@s = {
          fullName = "ends with"
          default = false
          label = "ends with"
        }
        contains = {
          fullName = "contains"
          default = false
          label = "contains"
        }
      }
      order = [
        salesforce.SBQQ__TermCondition__c.field.SBQQ__Operator__c.valueSet.values.equals,
        salesforce.SBQQ__TermCondition__c.field.SBQQ__Operator__c.valueSet.values.not_equals@s,
        salesforce.SBQQ__TermCondition__c.field.SBQQ__Operator__c.valueSet.values.less_than@s,
        salesforce.SBQQ__TermCondition__c.field.SBQQ__Operator__c.valueSet.values.less_or_equals@s,
        salesforce.SBQQ__TermCondition__c.field.SBQQ__Operator__c.valueSet.values.greater_than@s,
        salesforce.SBQQ__TermCondition__c.field.SBQQ__Operator__c.valueSet.values.greater_or_equals@s,
        salesforce.SBQQ__TermCondition__c.field.SBQQ__Operator__c.valueSet.values.starts_with@s,
        salesforce.SBQQ__TermCondition__c.field.SBQQ__Operator__c.valueSet.values.ends_with@s,
        salesforce.SBQQ__TermCondition__c.field.SBQQ__Operator__c.valueSet.values.contains,
      ]
    }
    sorted = false
    restricted = false
    createable = true
    updateable = true
    queryable = true
  }
  salesforce.MasterDetail SBQQ__QuoteTerm__c {
    apiName = "SBQQ__TermCondition__c.SBQQ__QuoteTerm__c"
    deprecated = false
    description = "Parent term for this term."
    inlineHelpText = "Parent term for this term."
    label = "Quote Term"
    referenceTo = [
      salesforce.SBQQ__QuoteTerm__c,
    ]
    relationshipLabel = "Term Conditions"
    relationshipName = "UseConditions"
    relationshipOrder = 0
    reparentableMasterDetail = false
    trackTrending = false
    writeRequiresMasterRead = false
    createable = true
    updateable = false
    queryable = true
  }
  salesforce.Picklist SBQQ__TestedField__c {
    apiName = "SBQQ__TermCondition__c.SBQQ__TestedField__c"
    deprecated = false
    description = "Field on quote object used for testing this condition."
    inlineHelpText = "Field on quote object used for testing this condition."
    label = "Tested Field"
    trackTrending = false
    valueSet = {
      values = {
        List_Amount@s = {
          fullName = "List Amount"
          default = false
          label = "List Amount"
        }
        Regular_Amount@s = {
          fullName = "Regular Amount"
          default = false
          label = "Regular Amount"
        }
        Customer_Amount@s = {
          fullName = "Customer Amount"
          default = false
          label = "Customer Amount"
        }
        Net_Amount@s = {
          fullName = "Net Amount"
          default = false
          label = "Net Amount"
        }
      }
      order = [
        salesforce.SBQQ__TermCondition__c.field.SBQQ__TestedField__c.valueSet.values.List_Amount@s,
        salesforce.SBQQ__TermCondition__c.field.SBQQ__TestedField__c.valueSet.values.Regular_Amount@s,
        salesforce.SBQQ__TermCondition__c.field.SBQQ__TestedField__c.valueSet.values.Customer_Amount@s,
        salesforce.SBQQ__TermCondition__c.field.SBQQ__TestedField__c.valueSet.values.Net_Amount@s,
      ]
    }
    sorted = false
    restricted = false
    createable = true
    updateable = true
    queryable = true
  }
  salesforce.Lookup SBQQ__TestedVariable__c {
    apiName = "SBQQ__TermCondition__c.SBQQ__TestedVariable__c"
    deleteConstraint = "SetNull"
    deprecated = false
    description = "Summary variable used in testing this condition."
    inlineHelpText = "Summary variable used in testing this condition."
    label = "Tested Variable"
    referenceTo = [
      salesforce.SBQQ__SummaryVariable__c,
    ]
    relationshipLabel = "Term Conditions"
    relationshipName = "TermConditions"
    trackTrending = false
    createable = true
    updateable = true
    queryable = true
  }
  salesforce.Text SBQQ__Value__c {
    apiName = "SBQQ__TermCondition__c.SBQQ__Value__c"
    deprecated = false
    description = "Value to test against."
    externalId = false
    inlineHelpText = "Value to test against."
    label = "Value"
    length = 255
    trackTrending = false
    unique = false
    caseSensitive = false
    createable = true
    updateable = true
    queryable = true
  }
}
